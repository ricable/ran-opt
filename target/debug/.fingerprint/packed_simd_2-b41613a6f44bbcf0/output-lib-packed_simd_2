{"$message_type":"diagnostic","message":"feature has been removed","code":{"code":"E0557","explanation":"A feature attribute named a feature that has been removed.\n\nErroneous code example:\n\n```compile_fail,E0557\n#![feature(managed_boxes)] // error: feature has been removed\n```\n\nDelete the offending feature attribute.\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/lib.rs","byte_start":8289,"byte_end":8308,"line_start":218,"line_end":218,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    platform_intrinsics,","highlight_start":5,"highlight_end":24}],"label":"feature has been removed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"SIMD intrinsics use the regular intrinsics ABI now","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0557]\u001b[0m\u001b[0m\u001b[1m: feature has been removed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/lib.rs:218:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    platform_intrinsics,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfeature has been removed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: SIMD intrinsics use the regular intrinsics ABI now\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`#![feature]` may not be used on the stable release channel","code":{"code":"E0554","explanation":"Feature attributes are only allowed on the nightly release channel. Stable or\nbeta compilers will not comply.\n\nErroneous code example:\n\n```ignore (depends on release channel)\n#![feature(lang_items)] // error: `#![feature]` may not be used on the\n                        //        stable release channel\n```\n\nIf you need the feature, make sure to use a nightly release of the compiler\n(but be warned that the feature may be removed or altered in the future).\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/lib.rs","byte_start":8219,"byte_end":8451,"line_start":214,"line_end":225,"column_start":1,"column_end":3,"is_primary":true,"text":[{"text":"#![feature(","highlight_start":1,"highlight_end":12},{"text":"    adt_const_params,","highlight_start":1,"highlight_end":22},{"text":"    repr_simd,","highlight_start":1,"highlight_end":15},{"text":"    rustc_attrs,","highlight_start":1,"highlight_end":17},{"text":"    platform_intrinsics,","highlight_start":1,"highlight_end":25},{"text":"    stdsimd,","highlight_start":1,"highlight_end":13},{"text":"    arm_target_feature,","highlight_start":1,"highlight_end":24},{"text":"    link_llvm_intrinsics,","highlight_start":1,"highlight_end":26},{"text":"    core_intrinsics,","highlight_start":1,"highlight_end":21},{"text":"    stmt_expr_attributes,","highlight_start":1,"highlight_end":26},{"text":"    custom_inner_attributes,","highlight_start":1,"highlight_end":29},{"text":")]","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0554]\u001b[0m\u001b[0m\u001b[1m: `#![feature]` may not be used on the stable release channel\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/lib.rs:214:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![feature(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    adt_const_params,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    repr_simd,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    rustc_attrs,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    custom_inner_attributes,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid ABI: found `platform-intrinsic`","code":{"code":"E0703","explanation":"Invalid ABI (Application Binary Interface) used in the code.\n\nErroneous code example:\n\n```compile_fail,E0703\nextern \"invalid\" fn foo() {} // error!\n# fn main() {}\n```\n\nAt present few predefined ABI's (like Rust, C, system, etc.) can be\nused in Rust. Verify that the ABI is predefined. For example you can\nreplace the given ABI from 'Rust'.\n\n```\nextern \"Rust\" fn foo() {} // ok!\n# fn main() { }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":235,"byte_end":255,"line_start":9,"line_end":9,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"extern \"platform-intrinsic\" {","highlight_start":8,"highlight_end":28}],"label":"invalid ABI","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"invoke `rustc --print=calling-conventions` for a full list of supported calling conventions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0703]\u001b[0m\u001b[0m\u001b[1m: invalid ABI: found `platform-intrinsic`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:9:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mextern \"platform-intrinsic\" {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9minvalid ABI\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: invoke `rustc --print=calling-conventions` for a full list of supported calling conventions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid ABI: found `platform-intrinsic`","code":{"code":"E0703","explanation":"Invalid ABI (Application Binary Interface) used in the code.\n\nErroneous code example:\n\n```compile_fail,E0703\nextern \"invalid\" fn foo() {} // error!\n# fn main() {}\n```\n\nAt present few predefined ABI's (like Rust, C, system, etc.) can be\nused in Rust. Verify that the ABI is predefined. For example you can\nreplace the given ABI from 'Rust'.\n\n```\nextern \"Rust\" fn foo() {} // ok!\n# fn main() { }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2068,"byte_end":2088,"line_start":78,"line_end":78,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"extern \"platform-intrinsic\" {","highlight_start":8,"highlight_end":28}],"label":"invalid ABI","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"invoke `rustc --print=calling-conventions` for a full list of supported calling conventions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0703]\u001b[0m\u001b[0m\u001b[1m: invalid ABI: found `platform-intrinsic`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:78:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mextern \"platform-intrinsic\" {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9minvalid ABI\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: invoke `rustc --print=calling-conventions` for a full list of supported calling conventions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unknown feature `stdsimd`","code":{"code":"E0635","explanation":"The `#![feature]` attribute specified an unknown feature.\n\nErroneous code example:\n\n```compile_fail,E0635\n#![feature(nonexistent_rust_feature)] // error: unknown feature\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/lib.rs","byte_start":8314,"byte_end":8321,"line_start":219,"line_end":219,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    stdsimd,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0635]\u001b[0m\u001b[0m\u001b[1m: unknown feature `stdsimd`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/lib.rs:219:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    stdsimd,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":262,"byte_end":321,"line_start":10,"line_end":10,"column_start":5,"column_end":64,"is_primary":true,"text":[{"text":"    pub fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;","highlight_start":5,"highlight_end":64}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":326,"byte_end":385,"line_start":11,"line_end":11,"column_start":5,"column_end":64,"is_primary":true,"text":[{"text":"    pub fn simd_shuffle4<T, U>(x: T, y: T, idx: [u32; 4]) -> U;","highlight_start":5,"highlight_end":64}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn simd_shuffle4<T, U>(x: T, y: T, idx: [u32; 4]) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":390,"byte_end":449,"line_start":12,"line_end":12,"column_start":5,"column_end":64,"is_primary":true,"text":[{"text":"    pub fn simd_shuffle8<T, U>(x: T, y: T, idx: [u32; 8]) -> U;","highlight_start":5,"highlight_end":64}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn simd_shuffle8<T, U>(x: T, y: T, idx: [u32; 8]) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":454,"byte_end":515,"line_start":13,"line_end":13,"column_start":5,"column_end":66,"is_primary":true,"text":[{"text":"    pub fn simd_shuffle16<T, U>(x: T, y: T, idx: [u32; 16]) -> U;","highlight_start":5,"highlight_end":66}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn simd_shuffle16<T, U>(x: T, y: T, idx: [u32; 16]) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":520,"byte_end":581,"line_start":14,"line_end":14,"column_start":5,"column_end":66,"is_primary":true,"text":[{"text":"    pub fn simd_shuffle32<T, U>(x: T, y: T, idx: [u32; 32]) -> U;","highlight_start":5,"highlight_end":66}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn simd_shuffle32<T, U>(x: T, y: T, idx: [u32; 32]) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":586,"byte_end":647,"line_start":15,"line_end":15,"column_start":5,"column_end":66,"is_primary":true,"text":[{"text":"    pub fn simd_shuffle64<T, U>(x: T, y: T, idx: [u32; 64]) -> U;","highlight_start":5,"highlight_end":66}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn simd_shuffle64<T, U>(x: T, y: T, idx: [u32; 64]) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2095,"byte_end":2140,"line_start":79,"line_end":79,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_eq<T, U>(x: T, y: T) -> U;","highlight_start":5,"highlight_end":50}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:79:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_eq<T, U>(x: T, y: T) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2145,"byte_end":2190,"line_start":80,"line_end":80,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_ne<T, U>(x: T, y: T) -> U;","highlight_start":5,"highlight_end":50}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:80:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_ne<T, U>(x: T, y: T) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2195,"byte_end":2240,"line_start":81,"line_end":81,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_lt<T, U>(x: T, y: T) -> U;","highlight_start":5,"highlight_end":50}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:81:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_lt<T, U>(x: T, y: T) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2245,"byte_end":2290,"line_start":82,"line_end":82,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_le<T, U>(x: T, y: T) -> U;","highlight_start":5,"highlight_end":50}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:82:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_le<T, U>(x: T, y: T) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2295,"byte_end":2340,"line_start":83,"line_end":83,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_gt<T, U>(x: T, y: T) -> U;","highlight_start":5,"highlight_end":50}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:83:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_gt<T, U>(x: T, y: T) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2345,"byte_end":2390,"line_start":84,"line_end":84,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_ge<T, U>(x: T, y: T) -> U;","highlight_start":5,"highlight_end":50}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:84:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_ge<T, U>(x: T, y: T) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2396,"byte_end":2457,"line_start":86,"line_end":86,"column_start":5,"column_end":66,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_insert<T, U>(x: T, idx: u32, val: U) -> T;","highlight_start":5,"highlight_end":66}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:86:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_insert<T, U>(x: T, idx: u32, val: U) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2462,"byte_end":2516,"line_start":87,"line_end":87,"column_start":5,"column_end":59,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_extract<T, U>(x: T, idx: u32) -> U;","highlight_start":5,"highlight_end":59}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:87:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_extract<T, U>(x: T, idx: u32) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2522,"byte_end":2563,"line_start":89,"line_end":89,"column_start":5,"column_end":46,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_cast<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":46}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:89:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_cast<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2569,"byte_end":2612,"line_start":91,"line_end":91,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_add<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":48}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:91:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_add<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2617,"byte_end":2660,"line_start":92,"line_end":92,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_sub<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":48}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:92:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_sub<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2665,"byte_end":2708,"line_start":93,"line_end":93,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_mul<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":48}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:93:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_mul<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2713,"byte_end":2756,"line_start":94,"line_end":94,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_div<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":48}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:94:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_div<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2761,"byte_end":2804,"line_start":95,"line_end":95,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_rem<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":48}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:95:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_rem<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2809,"byte_end":2852,"line_start":96,"line_end":96,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_shl<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":48}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:96:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_shl<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2857,"byte_end":2900,"line_start":97,"line_end":97,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_shr<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":48}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:97:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_shr<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2905,"byte_end":2948,"line_start":98,"line_end":98,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_and<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":48}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:98:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_and<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":2953,"byte_end":2995,"line_start":99,"line_end":99,"column_start":5,"column_end":47,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_or<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":47}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:99:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_or<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3000,"byte_end":3043,"line_start":100,"line_end":100,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_xor<T>(x: T, y: T) -> T;","highlight_start":5,"highlight_end":48}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:100:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_xor<T>(x: T, y: T) -> T;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3049,"byte_end":3106,"line_start":102,"line_end":102,"column_start":5,"column_end":62,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_add_unordered<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":62}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:102:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_add_unordered<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3111,"byte_end":3168,"line_start":103,"line_end":103,"column_start":5,"column_end":62,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_mul_unordered<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":62}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:103:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_mul_unordered<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3173,"byte_end":3236,"line_start":104,"line_end":104,"column_start":5,"column_end":68,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_add_ordered<T, U>(x: T, acc: U) -> U;","highlight_start":5,"highlight_end":68}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:104:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_add_ordered<T, U>(x: T, acc: U) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3241,"byte_end":3304,"line_start":105,"line_end":105,"column_start":5,"column_end":68,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_mul_ordered<T, U>(x: T, acc: U) -> U;","highlight_start":5,"highlight_end":68}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:105:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_mul_ordered<T, U>(x: T, acc: U) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3309,"byte_end":3356,"line_start":106,"line_end":106,"column_start":5,"column_end":52,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_min<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":52}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:106:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_min<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3361,"byte_end":3408,"line_start":107,"line_end":107,"column_start":5,"column_end":52,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_max<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":52}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:107:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_max<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3413,"byte_end":3468,"line_start":108,"line_end":108,"column_start":5,"column_end":60,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_min_nanless<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":60}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:108:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_min_nanless<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3473,"byte_end":3528,"line_start":109,"line_end":109,"column_start":5,"column_end":60,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_max_nanless<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":60}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:109:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_max_nanless<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3533,"byte_end":3580,"line_start":110,"line_end":110,"column_start":5,"column_end":52,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_and<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":52}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:110:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_and<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3585,"byte_end":3631,"line_start":111,"line_end":111,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_or<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":51}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:111:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_or<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3636,"byte_end":3683,"line_start":112,"line_end":112,"column_start":5,"column_end":52,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_xor<T, U>(x: T) -> U;","highlight_start":5,"highlight_end":52}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:112:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_xor<T, U>(x: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3688,"byte_end":3735,"line_start":113,"line_end":113,"column_start":5,"column_end":52,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_all<T>(x: T) -> bool;","highlight_start":5,"highlight_end":52}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:113:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_all<T>(x: T) -> bool;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3740,"byte_end":3787,"line_start":114,"line_end":114,"column_start":5,"column_end":52,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_reduce_any<T>(x: T) -> bool;","highlight_start":5,"highlight_end":52}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:114:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_reduce_any<T>(x: T) -> bool;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3793,"byte_end":3848,"line_start":116,"line_end":116,"column_start":5,"column_end":60,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_select<M, T>(m: M, a: T, b: T) -> T;","highlight_start":5,"highlight_end":60}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:116:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_select<M, T>(m: M, a: T, b: T) -> T;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3854,"byte_end":3898,"line_start":118,"line_end":118,"column_start":5,"column_end":49,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_fmin<T>(a: T, b: T) -> T;","highlight_start":5,"highlight_end":49}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:118:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_fmin<T>(a: T, b: T) -> T;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3903,"byte_end":3947,"line_start":119,"line_end":119,"column_start":5,"column_end":49,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_fmax<T>(a: T, b: T) -> T;","highlight_start":5,"highlight_end":49}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:119:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_fmax<T>(a: T, b: T) -> T;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3953,"byte_end":3992,"line_start":121,"line_end":121,"column_start":5,"column_end":44,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_fsqrt<T>(a: T) -> T;","highlight_start":5,"highlight_end":44}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:121:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_fsqrt<T>(a: T) -> T;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":3997,"byte_end":4046,"line_start":122,"line_end":122,"column_start":5,"column_end":54,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_fma<T>(a: T, b: T, c: T) -> T;","highlight_start":5,"highlight_end":54}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:122:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_fma<T>(a: T, b: T, c: T) -> T;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":4052,"byte_end":4124,"line_start":124,"line_end":124,"column_start":5,"column_end":77,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_gather<T, P, M>(value: T, pointers: P, mask: M) -> T;","highlight_start":5,"highlight_end":77}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:124:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_gather<T, P, M>(value: T, pointers: P, mask: M) -> T;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":4129,"byte_end":4197,"line_start":125,"line_end":125,"column_start":5,"column_end":73,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_scatter<T, P, M>(value: T, pointers: P, mask: M);","highlight_start":5,"highlight_end":73}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:125:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_scatter<T, P, M>(value: T, pointers: P, mask: M);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"foreign items may not have type parameters","code":{"code":"E0044","explanation":"You cannot use type or const parameters on foreign items.\n\nExample of erroneous code:\n\n```compile_fail,E0044\nextern \"C\" { fn some_func<T>(x: T); }\n```\n\nTo fix this, replace the generic parameter with the specializations that you\nneed:\n\n```\nextern \"C\" { fn some_func_i32(x: i32); }\nextern \"C\" { fn some_func_i64(x: i64); }\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs","byte_start":4203,"byte_end":4251,"line_start":127,"line_end":127,"column_start":5,"column_end":53,"is_primary":true,"text":[{"text":"    pub(crate) fn simd_bitmask<T, U>(value: T) -> U;","highlight_start":5,"highlight_end":53}],"label":"can't have type parameters","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"replace the type parameters with concrete types like `u32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0044]\u001b[0m\u001b[0m\u001b[1m: foreign items may not have type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/llvm.rs:127:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn simd_bitmask<T, U>(value: T) -> U;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't have type parameters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: replace the type parameters with concrete types like `u32`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v16.rs","byte_start":61,"byte_end":101,"line_start":5,"line_end":5,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"impl_simd_array!([i8; 2]: i8x2 | i8, i8);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v16.rs","byte_start":61,"byte_end":101,"line_start":5,"line_end":5,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"impl_simd_array!([i8; 2]: i8x2 | i8, i8);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v16.rs:5:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i8; 2]: i8x2 | i8, i8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v16.rs","byte_start":103,"byte_end":143,"line_start":6,"line_end":6,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"impl_simd_array!([u8; 2]: u8x2 | u8, u8);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v16.rs","byte_start":103,"byte_end":143,"line_start":6,"line_end":6,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"impl_simd_array!([u8; 2]: u8x2 | u8, u8);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v16.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u8; 2]: u8x2 | u8, u8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v16.rs","byte_start":145,"byte_end":185,"line_start":7,"line_end":7,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"impl_simd_array!([m8; 2]: m8x2 | i8, i8);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v16.rs","byte_start":145,"byte_end":185,"line_start":7,"line_end":7,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"impl_simd_array!([m8; 2]: m8x2 | i8, i8);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v16.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m8; 2]: m8x2 | i8, i8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":61,"byte_end":109,"line_start":5,"line_end":5,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([i8; 4]: i8x4 | i8, i8, i8, i8);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":61,"byte_end":109,"line_start":5,"line_end":5,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([i8; 4]: i8x4 | i8, i8, i8, i8);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs:5:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i8; 4]: i8x4 | i8, i8, i8, i8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":111,"byte_end":159,"line_start":6,"line_end":6,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([u8; 4]: u8x4 | u8, u8, u8, u8);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":111,"byte_end":159,"line_start":6,"line_end":6,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([u8; 4]: u8x4 | u8, u8, u8, u8);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u8; 4]: u8x4 | u8, u8, u8, u8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":161,"byte_end":209,"line_start":7,"line_end":7,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([m8; 4]: m8x4 | i8, i8, i8, i8);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":161,"byte_end":209,"line_start":7,"line_end":7,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([m8; 4]: m8x4 | i8, i8, i8, i8);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m8; 4]: m8x4 | i8, i8, i8, i8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":212,"byte_end":256,"line_start":9,"line_end":9,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([i16; 2]: i16x2 | i16, i16);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":212,"byte_end":256,"line_start":9,"line_end":9,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([i16; 2]: i16x2 | i16, i16);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs:9:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i16; 2]: i16x2 | i16, i16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":258,"byte_end":302,"line_start":10,"line_end":10,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([u16; 2]: u16x2 | u16, u16);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":258,"byte_end":302,"line_start":10,"line_end":10,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([u16; 2]: u16x2 | u16, u16);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u16; 2]: u16x2 | u16, u16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":304,"byte_end":348,"line_start":11,"line_end":11,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([m16; 2]: m16x2 | i16, i16);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs","byte_start":304,"byte_end":348,"line_start":11,"line_end":11,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([m16; 2]: m16x2 | i16, i16);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v32.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m16; 2]: m16x2 | i16, i16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":61,"byte_end":125,"line_start":5,"line_end":5,"column_start":1,"column_end":65,"is_primary":false,"text":[{"text":"impl_simd_array!([i8; 8]: i8x8 | i8, i8, i8, i8, i8, i8, i8, i8);","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":61,"byte_end":125,"line_start":5,"line_end":5,"column_start":1,"column_end":65,"is_primary":false,"text":[{"text":"impl_simd_array!([i8; 8]: i8x8 | i8, i8, i8, i8, i8, i8, i8, i8);","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:5:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i8; 8]: i8x8 | i8, i8, i8, i8, i8, i8, i8, i8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":127,"byte_end":191,"line_start":6,"line_end":6,"column_start":1,"column_end":65,"is_primary":false,"text":[{"text":"impl_simd_array!([u8; 8]: u8x8 | u8, u8, u8, u8, u8, u8, u8, u8);","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":127,"byte_end":191,"line_start":6,"line_end":6,"column_start":1,"column_end":65,"is_primary":false,"text":[{"text":"impl_simd_array!([u8; 8]: u8x8 | u8, u8, u8, u8, u8, u8, u8, u8);","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u8; 8]: u8x8 | u8, u8, u8, u8, u8, u8, u8, u8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":193,"byte_end":257,"line_start":7,"line_end":7,"column_start":1,"column_end":65,"is_primary":false,"text":[{"text":"impl_simd_array!([m8; 8]: m8x8 | i8, i8, i8, i8, i8, i8, i8, i8);","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":193,"byte_end":257,"line_start":7,"line_end":7,"column_start":1,"column_end":65,"is_primary":false,"text":[{"text":"impl_simd_array!([m8; 8]: m8x8 | i8, i8, i8, i8, i8, i8, i8, i8);","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m8; 8]: m8x8 | i8, i8, i8, i8, i8, i8, i8, i8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":260,"byte_end":314,"line_start":9,"line_end":9,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([i16; 4]: i16x4 | i16, i16, i16, i16);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":260,"byte_end":314,"line_start":9,"line_end":9,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([i16; 4]: i16x4 | i16, i16, i16, i16);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:9:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i16; 4]: i16x4 | i16, i16, i16, i16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":316,"byte_end":370,"line_start":10,"line_end":10,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([u16; 4]: u16x4 | u16, u16, u16, u16);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":316,"byte_end":370,"line_start":10,"line_end":10,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([u16; 4]: u16x4 | u16, u16, u16, u16);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u16; 4]: u16x4 | u16, u16, u16, u16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":372,"byte_end":426,"line_start":11,"line_end":11,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([m16; 4]: m16x4 | i16, i16, i16, i16);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":372,"byte_end":426,"line_start":11,"line_end":11,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([m16; 4]: m16x4 | i16, i16, i16, i16);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m16; 4]: m16x4 | i16, i16, i16, i16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":429,"byte_end":473,"line_start":13,"line_end":13,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([i32; 2]: i32x2 | i32, i32);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":429,"byte_end":473,"line_start":13,"line_end":13,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([i32; 2]: i32x2 | i32, i32);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i32; 2]: i32x2 | i32, i32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":475,"byte_end":519,"line_start":14,"line_end":14,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([u32; 2]: u32x2 | u32, u32);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":475,"byte_end":519,"line_start":14,"line_end":14,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([u32; 2]: u32x2 | u32, u32);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u32; 2]: u32x2 | u32, u32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":521,"byte_end":565,"line_start":15,"line_end":15,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([f32; 2]: f32x2 | f32, f32);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":521,"byte_end":565,"line_start":15,"line_end":15,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([f32; 2]: f32x2 | f32, f32);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([f32; 2]: f32x2 | f32, f32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":567,"byte_end":611,"line_start":16,"line_end":16,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([m32; 2]: m32x2 | i32, i32);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":567,"byte_end":611,"line_start":16,"line_end":16,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([m32; 2]: m32x2 | i32, i32);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:16:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m32; 2]: m32x2 | i32, i32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":614,"byte_end":653,"line_start":18,"line_end":18,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"impl_simd_array!([i64; 1]: i64x1 | i64);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":614,"byte_end":653,"line_start":18,"line_end":18,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"impl_simd_array!([i64; 1]: i64x1 | i64);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i64; 1]: i64x1 | i64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":655,"byte_end":694,"line_start":19,"line_end":19,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"impl_simd_array!([u64; 1]: u64x1 | u64);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":655,"byte_end":694,"line_start":19,"line_end":19,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"impl_simd_array!([u64; 1]: u64x1 | u64);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u64; 1]: u64x1 | u64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":696,"byte_end":735,"line_start":20,"line_end":20,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"impl_simd_array!([f64; 1]: f64x1 | f64);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":696,"byte_end":735,"line_start":20,"line_end":20,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"impl_simd_array!([f64; 1]: f64x1 | f64);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([f64; 1]: f64x1 | f64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":737,"byte_end":776,"line_start":21,"line_end":21,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"impl_simd_array!([m64; 1]: m64x1 | i64);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs","byte_start":737,"byte_end":776,"line_start":21,"line_end":21,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"impl_simd_array!([m64; 1]: m64x1 | i64);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v64.rs:21:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m64; 1]: m64x1 | i64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":79,"byte_end":199,"line_start":6,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i8; 16]: i8x16 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":79,"byte_end":199,"line_start":6,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i8; 16]: i8x16 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [i8; 16]: i8x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":218,"byte_end":338,"line_start":14,"line_end":20,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u8; 16]: u8x16 |","highlight_start":1,"highlight_end":22},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":218,"byte_end":338,"line_start":14,"line_end":20,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u8; 16]: u8x16 |","highlight_start":1,"highlight_end":22},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [u8; 16]: u8x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":357,"byte_end":477,"line_start":22,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m8; 16]: m8x16 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":357,"byte_end":477,"line_start":22,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m8; 16]: m8x16 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [m8; 16]: m8x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":480,"byte_end":554,"line_start":30,"line_end":30,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([i16; 8]: i16x8 | i16, i16, i16, i16, i16, i16, i16, i16);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":480,"byte_end":554,"line_start":30,"line_end":30,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([i16; 8]: i16x8 | i16, i16, i16, i16, i16, i16, i16, i16);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:30:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i16; 8]: i16x8 | i16, i16, i16, i16, i16, i16, i16, i16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":556,"byte_end":630,"line_start":31,"line_end":31,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([u16; 8]: u16x8 | u16, u16, u16, u16, u16, u16, u16, u16);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":556,"byte_end":630,"line_start":31,"line_end":31,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([u16; 8]: u16x8 | u16, u16, u16, u16, u16, u16, u16, u16);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:31:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u16; 8]: u16x8 | u16, u16, u16, u16, u16, u16, u16, u16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":632,"byte_end":706,"line_start":32,"line_end":32,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([m16; 8]: m16x8 | i16, i16, i16, i16, i16, i16, i16, i16);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":632,"byte_end":706,"line_start":32,"line_end":32,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([m16; 8]: m16x8 | i16, i16, i16, i16, i16, i16, i16, i16);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:32:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m16; 8]: m16x8 | i16, i16, i16, i16, i16, i16, i16, i16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":709,"byte_end":763,"line_start":34,"line_end":34,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([i32; 4]: i32x4 | i32, i32, i32, i32);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":709,"byte_end":763,"line_start":34,"line_end":34,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([i32; 4]: i32x4 | i32, i32, i32, i32);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:34:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i32; 4]: i32x4 | i32, i32, i32, i32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":765,"byte_end":819,"line_start":35,"line_end":35,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([u32; 4]: u32x4 | u32, u32, u32, u32);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":765,"byte_end":819,"line_start":35,"line_end":35,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([u32; 4]: u32x4 | u32, u32, u32, u32);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:35:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u32; 4]: u32x4 | u32, u32, u32, u32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":821,"byte_end":875,"line_start":36,"line_end":36,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([f32; 4]: f32x4 | f32, f32, f32, f32);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":821,"byte_end":875,"line_start":36,"line_end":36,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([f32; 4]: f32x4 | f32, f32, f32, f32);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:36:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([f32; 4]: f32x4 | f32, f32, f32, f32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":877,"byte_end":931,"line_start":37,"line_end":37,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([m32; 4]: m32x4 | i32, i32, i32, i32);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":877,"byte_end":931,"line_start":37,"line_end":37,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([m32; 4]: m32x4 | i32, i32, i32, i32);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m32; 4]: m32x4 | i32, i32, i32, i32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":934,"byte_end":978,"line_start":39,"line_end":39,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([i64; 2]: i64x2 | i64, i64);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":934,"byte_end":978,"line_start":39,"line_end":39,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([i64; 2]: i64x2 | i64, i64);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:39:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i64; 2]: i64x2 | i64, i64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":980,"byte_end":1024,"line_start":40,"line_end":40,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([u64; 2]: u64x2 | u64, u64);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":980,"byte_end":1024,"line_start":40,"line_end":40,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([u64; 2]: u64x2 | u64, u64);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:40:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u64; 2]: u64x2 | u64, u64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1026,"byte_end":1070,"line_start":41,"line_end":41,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([f64; 2]: f64x2 | f64, f64);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1026,"byte_end":1070,"line_start":41,"line_end":41,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([f64; 2]: f64x2 | f64, f64);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:41:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([f64; 2]: f64x2 | f64, f64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1072,"byte_end":1116,"line_start":42,"line_end":42,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([m64; 2]: m64x2 | i64, i64);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1072,"byte_end":1116,"line_start":42,"line_end":42,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl_simd_array!([m64; 2]: m64x2 | i64, i64);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:42:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m64; 2]: m64x2 | i64, i64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1119,"byte_end":1161,"line_start":44,"line_end":44,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"impl_simd_array!([i128; 1]: i128x1 | i128);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1119,"byte_end":1161,"line_start":44,"line_end":44,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"impl_simd_array!([i128; 1]: i128x1 | i128);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:44:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i128; 1]: i128x1 | i128);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1163,"byte_end":1205,"line_start":45,"line_end":45,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"impl_simd_array!([u128; 1]: u128x1 | u128);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1163,"byte_end":1205,"line_start":45,"line_end":45,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"impl_simd_array!([u128; 1]: u128x1 | u128);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:45:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u128; 1]: u128x1 | u128);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1207,"byte_end":1249,"line_start":46,"line_end":46,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"impl_simd_array!([m128; 1]: m128x1 | i128);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs","byte_start":1207,"byte_end":1249,"line_start":46,"line_end":46,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"impl_simd_array!([m128; 1]: m128x1 | i128);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v128.rs:46:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m128; 1]: m128x1 | i128);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":79,"byte_end":279,"line_start":6,"line_end":16,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i8; 32]: i8x32 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":79,"byte_end":279,"line_start":6,"line_end":16,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i8; 32]: i8x32 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [i8; 32]: i8x32 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":298,"byte_end":498,"line_start":18,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u8; 32]: u8x32 |","highlight_start":1,"highlight_end":22},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":298,"byte_end":498,"line_start":18,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u8; 32]: u8x32 |","highlight_start":1,"highlight_end":22},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [u8; 32]: u8x32 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":517,"byte_end":717,"line_start":30,"line_end":40,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m8; 32]: m8x32 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":517,"byte_end":717,"line_start":30,"line_end":40,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m8; 32]: m8x32 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:30:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [m8; 32]: m8x32 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":736,"byte_end":874,"line_start":42,"line_end":48,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i16; 16]: i16x16 |","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":736,"byte_end":874,"line_start":42,"line_end":48,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i16; 16]: i16x16 |","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:42:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [i16; 16]: i16x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":893,"byte_end":1031,"line_start":50,"line_end":56,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u16; 16]: u16x16 |","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":893,"byte_end":1031,"line_start":50,"line_end":56,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u16; 16]: u16x16 |","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:50:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [u16; 16]: u16x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u16, u16, u16, u16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u16, u16, u16, u16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u16, u16, u16, u16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u16, u16, u16, u16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1050,"byte_end":1188,"line_start":58,"line_end":64,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m16; 16]: m16x16 |","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1050,"byte_end":1188,"line_start":58,"line_end":64,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m16; 16]: m16x16 |","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [m16; 16]: m16x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1191,"byte_end":1265,"line_start":66,"line_end":66,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([i32; 8]: i32x8 | i32, i32, i32, i32, i32, i32, i32, i32);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1191,"byte_end":1265,"line_start":66,"line_end":66,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([i32; 8]: i32x8 | i32, i32, i32, i32, i32, i32, i32, i32);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:66:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i32; 8]: i32x8 | i32, i32, i32, i32, i32, i32, i32, i32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1267,"byte_end":1341,"line_start":67,"line_end":67,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([u32; 8]: u32x8 | u32, u32, u32, u32, u32, u32, u32, u32);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1267,"byte_end":1341,"line_start":67,"line_end":67,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([u32; 8]: u32x8 | u32, u32, u32, u32, u32, u32, u32, u32);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:67:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u32; 8]: u32x8 | u32, u32, u32, u32, u32, u32, u32, u32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1343,"byte_end":1417,"line_start":68,"line_end":68,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([f32; 8]: f32x8 | f32, f32, f32, f32, f32, f32, f32, f32);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1343,"byte_end":1417,"line_start":68,"line_end":68,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([f32; 8]: f32x8 | f32, f32, f32, f32, f32, f32, f32, f32);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:68:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([f32; 8]: f32x8 | f32, f32, f32, f32, f32, f32, f32, f32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1419,"byte_end":1493,"line_start":69,"line_end":69,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([m32; 8]: m32x8 | i32, i32, i32, i32, i32, i32, i32, i32);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1419,"byte_end":1493,"line_start":69,"line_end":69,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([m32; 8]: m32x8 | i32, i32, i32, i32, i32, i32, i32, i32);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:69:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m32; 8]: m32x8 | i32, i32, i32, i32, i32, i32, i32, i32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1496,"byte_end":1550,"line_start":71,"line_end":71,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([i64; 4]: i64x4 | i64, i64, i64, i64);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1496,"byte_end":1550,"line_start":71,"line_end":71,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([i64; 4]: i64x4 | i64, i64, i64, i64);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:71:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i64; 4]: i64x4 | i64, i64, i64, i64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1552,"byte_end":1606,"line_start":72,"line_end":72,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([u64; 4]: u64x4 | u64, u64, u64, u64);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1552,"byte_end":1606,"line_start":72,"line_end":72,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([u64; 4]: u64x4 | u64, u64, u64, u64);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:72:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u64; 4]: u64x4 | u64, u64, u64, u64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1608,"byte_end":1662,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([f64; 4]: f64x4 | f64, f64, f64, f64);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1608,"byte_end":1662,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([f64; 4]: f64x4 | f64, f64, f64, f64);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:73:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([f64; 4]: f64x4 | f64, f64, f64, f64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1664,"byte_end":1718,"line_start":74,"line_end":74,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([m64; 4]: m64x4 | i64, i64, i64, i64);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1664,"byte_end":1718,"line_start":74,"line_end":74,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([m64; 4]: m64x4 | i64, i64, i64, i64);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:74:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m64; 4]: m64x4 | i64, i64, i64, i64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1721,"byte_end":1769,"line_start":76,"line_end":76,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([i128; 2]: i128x2 | i128, i128);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1721,"byte_end":1769,"line_start":76,"line_end":76,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([i128; 2]: i128x2 | i128, i128);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:76:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i128; 2]: i128x2 | i128, i128);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1771,"byte_end":1819,"line_start":77,"line_end":77,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([u128; 2]: u128x2 | u128, u128);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1771,"byte_end":1819,"line_start":77,"line_end":77,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([u128; 2]: u128x2 | u128, u128);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:77:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u128; 2]: u128x2 | u128, u128);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1821,"byte_end":1869,"line_start":78,"line_end":78,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([m128; 2]: m128x2 | i128, i128);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs","byte_start":1821,"byte_end":1869,"line_start":78,"line_end":78,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_array!([m128; 2]: m128x2 | i128, i128);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v256.rs:78:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m128; 2]: m128x2 | i128, i128);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":79,"byte_end":440,"line_start":6,"line_end":25,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i8; 64]: i8x64 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":79,"byte_end":440,"line_start":6,"line_end":25,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i8; 64]: i8x64 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [i8; 64]: i8x64 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":459,"byte_end":820,"line_start":27,"line_end":46,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u8; 64]: u8x64 |","highlight_start":1,"highlight_end":22},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":459,"byte_end":820,"line_start":27,"line_end":46,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u8; 64]: u8x64 |","highlight_start":1,"highlight_end":22},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8,","highlight_start":1,"highlight_end":20},{"text":"    u8, u8, u8, u8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:27:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [u8; 64]: u8x64 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u8, u8, u8, u8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":839,"byte_end":1200,"line_start":48,"line_end":67,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m8; 64]: m8x64 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":839,"byte_end":1200,"line_start":48,"line_end":67,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m8; 64]: m8x64 |","highlight_start":1,"highlight_end":22},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8,","highlight_start":1,"highlight_end":20},{"text":"    i8, i8, i8, i8","highlight_start":1,"highlight_end":19},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:48:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [m8; 64]: m8x64 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i8, i8, i8, i8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":1219,"byte_end":1453,"line_start":69,"line_end":79,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i16; 32]: i16x32 |","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":1219,"byte_end":1453,"line_start":69,"line_end":79,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i16; 32]: i16x32 |","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:69:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [i16; 32]: i16x32 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":1472,"byte_end":1706,"line_start":81,"line_end":91,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u16; 32]: u16x32 |","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":1472,"byte_end":1706,"line_start":81,"line_end":91,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u16; 32]: u16x32 |","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16,","highlight_start":1,"highlight_end":24},{"text":"    u16, u16, u16, u16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:81:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [u16; 32]: u16x32 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u16, u16, u16, u16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u16, u16, u16, u16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u16, u16, u16, u16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":1725,"byte_end":1959,"line_start":93,"line_end":103,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m16; 32]: m16x32 |","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":1725,"byte_end":1959,"line_start":93,"line_end":103,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m16; 32]: m16x32 |","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16,","highlight_start":1,"highlight_end":24},{"text":"    i16, i16, i16, i16","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:93:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [m16; 32]: m16x32 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i16, i16, i16, i16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":1979,"byte_end":2117,"line_start":106,"line_end":112,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i32; 16]: i32x16 |","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":1979,"byte_end":2117,"line_start":106,"line_end":112,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [i32; 16]: i32x16 |","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:106:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [i32; 16]: i32x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i32, i32, i32, i32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i32, i32, i32, i32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i32, i32, i32, i32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i32, i32, i32, i32\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2136,"byte_end":2274,"line_start":114,"line_end":120,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u32; 16]: u32x16 |","highlight_start":1,"highlight_end":24},{"text":"    u32, u32, u32, u32,","highlight_start":1,"highlight_end":24},{"text":"    u32, u32, u32, u32,","highlight_start":1,"highlight_end":24},{"text":"    u32, u32, u32, u32,","highlight_start":1,"highlight_end":24},{"text":"    u32, u32, u32, u32","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2136,"byte_end":2274,"line_start":114,"line_end":120,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [u32; 16]: u32x16 |","highlight_start":1,"highlight_end":24},{"text":"    u32, u32, u32, u32,","highlight_start":1,"highlight_end":24},{"text":"    u32, u32, u32, u32,","highlight_start":1,"highlight_end":24},{"text":"    u32, u32, u32, u32,","highlight_start":1,"highlight_end":24},{"text":"    u32, u32, u32, u32","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:114:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [u32; 16]: u32x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u32, u32, u32, u32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u32, u32, u32, u32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u32, u32, u32, u32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    u32, u32, u32, u32\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2293,"byte_end":2431,"line_start":122,"line_end":128,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [f32; 16]: f32x16 |","highlight_start":1,"highlight_end":24},{"text":"    f32, f32, f32, f32,","highlight_start":1,"highlight_end":24},{"text":"    f32, f32, f32, f32,","highlight_start":1,"highlight_end":24},{"text":"    f32, f32, f32, f32,","highlight_start":1,"highlight_end":24},{"text":"    f32, f32, f32, f32","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2293,"byte_end":2431,"line_start":122,"line_end":128,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [f32; 16]: f32x16 |","highlight_start":1,"highlight_end":24},{"text":"    f32, f32, f32, f32,","highlight_start":1,"highlight_end":24},{"text":"    f32, f32, f32, f32,","highlight_start":1,"highlight_end":24},{"text":"    f32, f32, f32, f32,","highlight_start":1,"highlight_end":24},{"text":"    f32, f32, f32, f32","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:122:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [f32; 16]: f32x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f32, f32, f32, f32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f32, f32, f32, f32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f32, f32, f32, f32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f32, f32, f32, f32\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2450,"byte_end":2588,"line_start":130,"line_end":136,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m32; 16]: m32x16 |","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2450,"byte_end":2588,"line_start":130,"line_end":136,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_simd_array!(","highlight_start":1,"highlight_end":18},{"text":"    [m32; 16]: m32x16 |","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32,","highlight_start":1,"highlight_end":24},{"text":"    i32, i32, i32, i32","highlight_start":1,"highlight_end":23},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:130:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [m32; 16]: m32x16 |\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i32, i32, i32, i32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i32, i32, i32, i32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i32, i32, i32, i32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    i32, i32, i32, i32\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2591,"byte_end":2665,"line_start":138,"line_end":138,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([i64; 8]: i64x8 | i64, i64, i64, i64, i64, i64, i64, i64);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2591,"byte_end":2665,"line_start":138,"line_end":138,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([i64; 8]: i64x8 | i64, i64, i64, i64, i64, i64, i64, i64);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i64; 8]: i64x8 | i64, i64, i64, i64, i64, i64, i64, i64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2667,"byte_end":2741,"line_start":139,"line_end":139,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([u64; 8]: u64x8 | u64, u64, u64, u64, u64, u64, u64, u64);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2667,"byte_end":2741,"line_start":139,"line_end":139,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([u64; 8]: u64x8 | u64, u64, u64, u64, u64, u64, u64, u64);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:139:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u64; 8]: u64x8 | u64, u64, u64, u64, u64, u64, u64, u64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2743,"byte_end":2817,"line_start":140,"line_end":140,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([f64; 8]: f64x8 | f64, f64, f64, f64, f64, f64, f64, f64);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2743,"byte_end":2817,"line_start":140,"line_end":140,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([f64; 8]: f64x8 | f64, f64, f64, f64, f64, f64, f64, f64);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([f64; 8]: f64x8 | f64, f64, f64, f64, f64, f64, f64, f64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2819,"byte_end":2893,"line_start":141,"line_end":141,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([m64; 8]: m64x8 | i64, i64, i64, i64, i64, i64, i64, i64);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2819,"byte_end":2893,"line_start":141,"line_end":141,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"impl_simd_array!([m64; 8]: m64x8 | i64, i64, i64, i64, i64, i64, i64, i64);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:141:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m64; 8]: m64x8 | i64, i64, i64, i64, i64, i64, i64, i64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2896,"byte_end":2956,"line_start":143,"line_end":143,"column_start":1,"column_end":61,"is_primary":false,"text":[{"text":"impl_simd_array!([i128; 4]: i128x4 | i128, i128, i128, i128);","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2896,"byte_end":2956,"line_start":143,"line_end":143,"column_start":1,"column_end":61,"is_primary":false,"text":[{"text":"impl_simd_array!([i128; 4]: i128x4 | i128, i128, i128, i128);","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:143:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([i128; 4]: i128x4 | i128, i128, i128, i128);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2958,"byte_end":3018,"line_start":144,"line_end":144,"column_start":1,"column_end":61,"is_primary":false,"text":[{"text":"impl_simd_array!([u128; 4]: u128x4 | u128, u128, u128, u128);","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":2958,"byte_end":3018,"line_start":144,"line_end":144,"column_start":1,"column_end":61,"is_primary":false,"text":[{"text":"impl_simd_array!([u128; 4]: u128x4 | u128, u128, u128, u128);","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:144:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([u128; 4]: u128x4 | u128, u128, u128, u128);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":3020,"byte_end":3080,"line_start":145,"line_end":145,"column_start":1,"column_end":61,"is_primary":false,"text":[{"text":"impl_simd_array!([m128; 4]: m128x4 | i128, i128, i128, i128);","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs","byte_start":3020,"byte_end":3080,"line_start":145,"line_end":145,"column_start":1,"column_end":61,"is_primary":false,"text":[{"text":"impl_simd_array!([m128; 4]: m128x4 | i128, i128, i128, i128);","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/v512.rs:145:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([m128; 4]: m128x4 | i128, i128, i128, i128);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":125,"byte_end":179,"line_start":6,"line_end":6,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([isize; 2]: isizex2 | isize_, isize_);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":125,"byte_end":179,"line_start":6,"line_end":6,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([isize; 2]: isizex2 | isize_, isize_);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([isize; 2]: isizex2 | isize_, isize_);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":181,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([usize; 2]: usizex2 | usize_, usize_);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":181,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([usize; 2]: usizex2 | usize_, usize_);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([usize; 2]: usizex2 | usize_, usize_);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":237,"byte_end":291,"line_start":8,"line_end":8,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([msize; 2]: msizex2 | isize_, isize_);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":237,"byte_end":291,"line_start":8,"line_end":8,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_array!([msize; 2]: msizex2 | isize_, isize_);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs:8:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([msize; 2]: msizex2 | isize_, isize_);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":294,"byte_end":364,"line_start":10,"line_end":10,"column_start":1,"column_end":71,"is_primary":false,"text":[{"text":"impl_simd_array!([isize; 4]: isizex4 | isize_, isize_, isize_, isize_);","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":294,"byte_end":364,"line_start":10,"line_end":10,"column_start":1,"column_end":71,"is_primary":false,"text":[{"text":"impl_simd_array!([isize; 4]: isizex4 | isize_, isize_, isize_, isize_);","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([isize; 4]: isizex4 | isize_, isize_, isize_, isize_);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":366,"byte_end":436,"line_start":11,"line_end":11,"column_start":1,"column_end":71,"is_primary":false,"text":[{"text":"impl_simd_array!([usize; 4]: usizex4 | usize_, usize_, usize_, usize_);","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":366,"byte_end":436,"line_start":11,"line_end":11,"column_start":1,"column_end":71,"is_primary":false,"text":[{"text":"impl_simd_array!([usize; 4]: usizex4 | usize_, usize_, usize_, usize_);","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([usize; 4]: usizex4 | usize_, usize_, usize_, usize_);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":438,"byte_end":508,"line_start":12,"line_end":12,"column_start":1,"column_end":71,"is_primary":false,"text":[{"text":"impl_simd_array!([msize; 4]: msizex4 | isize_, isize_, isize_, isize_);","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":438,"byte_end":508,"line_start":12,"line_end":12,"column_start":1,"column_end":71,"is_primary":false,"text":[{"text":"impl_simd_array!([msize; 4]: msizex4 | isize_, isize_, isize_, isize_);","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([msize; 4]: msizex4 | isize_, isize_, isize_, isize_);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":511,"byte_end":613,"line_start":14,"line_end":14,"column_start":1,"column_end":103,"is_primary":false,"text":[{"text":"impl_simd_array!([isize; 8]: isizex8 | isize_, isize_, isize_, isize_, isize_, isize_, isize_, isize_);","highlight_start":1,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":511,"byte_end":613,"line_start":14,"line_end":14,"column_start":1,"column_end":103,"is_primary":false,"text":[{"text":"impl_simd_array!([isize; 8]: isizex8 | isize_, isize_, isize_, isize_, isize_, isize_, isize_, isize_);","highlight_start":1,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([isize; 8]: isizex8 | isize_, isize_, isize_, isize_, isize_, isize_, isize_, isize_);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":615,"byte_end":717,"line_start":15,"line_end":15,"column_start":1,"column_end":103,"is_primary":false,"text":[{"text":"impl_simd_array!([usize; 8]: usizex8 | usize_, usize_, usize_, usize_, usize_, usize_, usize_, usize_);","highlight_start":1,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":615,"byte_end":717,"line_start":15,"line_end":15,"column_start":1,"column_end":103,"is_primary":false,"text":[{"text":"impl_simd_array!([usize; 8]: usizex8 | usize_, usize_, usize_, usize_, usize_, usize_, usize_, usize_);","highlight_start":1,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([usize; 8]: usizex8 | usize_, usize_, usize_, usize_, usize_, usize_, usize_, usize_);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":413,"byte_end":433,"line_start":16,"line_end":16,"column_start":32,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":32,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":719,"byte_end":821,"line_start":16,"line_end":16,"column_start":1,"column_end":103,"is_primary":false,"text":[{"text":"impl_simd_array!([msize; 8]: msizex8 | isize_, isize_, isize_, isize_, isize_, isize_, isize_, isize_);","highlight_start":1,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":390,"byte_end":438,"line_start":16,"line_end":16,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id($(pub(crate) $elem_tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs","byte_start":719,"byte_end":821,"line_start":16,"line_end":16,"column_start":1,"column_end":103,"is_primary":false,"text":[{"text":"impl_simd_array!([msize; 8]: msizex8 | isize_, isize_, isize_, isize_, isize_, isize_, isize_, isize_);","highlight_start":1,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_array!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs","byte_start":207,"byte_end":235,"line_start":11,"line_end":11,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_array {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id($(pub(crate) $elem_tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vSize.rs:16:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_array!([msize; 8]: msizex8 | isize_, isize_, isize_, isize_, isize_, isize_, isize_, isize_);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_array` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":235,"byte_end":250,"line_start":8,"line_end":8,"column_start":37,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":37,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":888,"byte_end":936,"line_start":29,"line_end":29,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*const T; 2]: cptrx2 | T | T, T);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":207,"byte_end":255,"line_start":8,"line_end":8,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":888,"byte_end":936,"line_start":29,"line_end":29,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*const T; 2]: cptrx2 | T | T, T);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs:8:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_ptr!([*const T; 2]: cptrx2 | T | T, T);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_ptr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":235,"byte_end":250,"line_start":8,"line_end":8,"column_start":37,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":37,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":938,"byte_end":992,"line_start":30,"line_end":30,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*const T; 4]: cptrx4 | T | T, T, T, T);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":207,"byte_end":255,"line_start":8,"line_end":8,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":938,"byte_end":992,"line_start":30,"line_end":30,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*const T; 4]: cptrx4 | T | T, T, T, T);","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs:8:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_ptr!([*const T; 4]: cptrx4 | T | T, T, T, T);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_ptr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":235,"byte_end":250,"line_start":8,"line_end":8,"column_start":37,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":37,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":994,"byte_end":1060,"line_start":31,"line_end":31,"column_start":1,"column_end":67,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*const T; 8]: cptrx8 | T | T, T, T, T, T, T, T, T);","highlight_start":1,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":207,"byte_end":255,"line_start":8,"line_end":8,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":994,"byte_end":1060,"line_start":31,"line_end":31,"column_start":1,"column_end":67,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*const T; 8]: cptrx8 | T | T, T, T, T, T, T, T, T);","highlight_start":1,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs:8:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_ptr!([*const T; 8]: cptrx8 | T | T, T, T, T, T, T, T, T);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_ptr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":235,"byte_end":250,"line_start":8,"line_end":8,"column_start":37,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":37,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":1063,"byte_end":1109,"line_start":33,"line_end":33,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*mut T; 2]: mptrx2 | T | T, T);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":207,"byte_end":255,"line_start":8,"line_end":8,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":1063,"byte_end":1109,"line_start":33,"line_end":33,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*mut T; 2]: mptrx2 | T | T, T);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs:8:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_ptr!([*mut T; 2]: mptrx2 | T | T, T);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_ptr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":235,"byte_end":250,"line_start":8,"line_end":8,"column_start":37,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":37,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":1111,"byte_end":1163,"line_start":34,"line_end":34,"column_start":1,"column_end":53,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*mut T; 4]: mptrx4 | T | T, T, T, T);","highlight_start":1,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":207,"byte_end":255,"line_start":8,"line_end":8,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":1111,"byte_end":1163,"line_start":34,"line_end":34,"column_start":1,"column_end":53,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*mut T; 4]: mptrx4 | T | T, T, T, T);","highlight_start":1,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs:8:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_ptr!([*mut T; 4]: mptrx4 | T | T, T, T, T);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_ptr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"SIMD vector's only field must be an array","code":{"code":"E0076","explanation":"The type of the field in a tuple struct isn't an array when using the `#[simd]`\nattribute.\n\nErroneous code example:\n\n```compile_fail,E0076\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Bad(u16); // error!\n```\n\nWhen using the `#[simd]` attribute to automatically use SIMD operations in tuple\nstructs, if you want a single-lane vector then the field must be a 1-element\narray, or the compiler will trigger this error.\n\nFixed example:\n\n```\n#![feature(repr_simd)]\n\n#[repr(simd)]\nstruct Good([u16; 1]); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":235,"byte_end":250,"line_start":8,"line_end":8,"column_start":37,"column_end":52,"is_primary":false,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":37,"highlight_end":52}],"label":"not an array","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":1165,"byte_end":1229,"line_start":35,"line_end":35,"column_start":1,"column_end":65,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*mut T; 8]: mptrx8 | T | T, T, T, T, T, T, T, T);","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":207,"byte_end":255,"line_start":8,"line_end":8,"column_start":9,"column_end":57,"is_primary":true,"text":[{"text":"        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);","highlight_start":9,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":1165,"byte_end":1229,"line_start":35,"line_end":35,"column_start":1,"column_end":65,"is_primary":false,"text":[{"text":"impl_simd_ptr!([*mut T; 8]: mptrx8 | T | T, T, T, T, T, T, T, T);","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_simd_ptr!","def_site_span":{"file_name":"/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs","byte_start":26,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! impl_simd_ptr {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0076]\u001b[0m\u001b[0m\u001b[1m: SIMD vector's only field must be an array\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cedric/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/packed_simd_2-0.3.8/src/codegen/vPtr.rs:8:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct $tuple_id<$ty>($(pub(crate) $tys),*);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot an array\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_simd_ptr!([*mut T; 8]: mptrx8 | T | T, T, T, T, T, T, T, T);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_simd_ptr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 140 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 140 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0044, E0076, E0554, E0557, E0635, E0703.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0044, E0076, E0554, E0557, E0635, E0703.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0044`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0044`.\u001b[0m\n"}
